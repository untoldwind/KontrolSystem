use core::math as math
use { Vec2 } from ksp::math

pub sync fn anneal_optimize(func : fn(float, float) -> float, min : Vec2, max : Vec2, max_temp : float, iters : int, num_particles : int, cooling_rate : float) -> Unit = {
    const random = math::random()
    let temp = max_temp
    let range = max - min
    let particles = 0..num_particles.map(fn(i) -> {
        const pos = if(i == 0) range / 2 else <Vec2>(x: random.next_float() * range.x + min.x, y: random.next_float() * range.y + min.y )
        (pos: pos, f: func(pos.x, pos.y))
    })

    let n = iters
    while(n > 0) {
        n -= 1
        const window = 0.5 * n / iters * range
    }
}