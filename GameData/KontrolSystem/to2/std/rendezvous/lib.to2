use { remove_all_nodes } from std::utils
use { next_closest_approach_time } from std::maneuvers
use { current_time } from ksp::game
use { CONSOLE } from ksp::console
use { active_vessel } from ksp::vessel
use { exec_next_node } from std::vac

pub fn approach_target() -> Result<Unit, string> = {
    const vessel = active_vessel()?
    const target = vessel.target.ok_or("Not target for rendezvous")?
    
    const closest_time = next_closest_approach_time(vessel.orbit, target.orbit, current_time())

    CONSOLE.print_line(">>> " + closest_time.to_string())
    
    const delta_v = target.orbit.orbital_velocity(closest_time) - vessel.orbit.orbital_velocity(closest_time) 
    
    remove_all_nodes(vessel)
    vessel.maneuver.add_burn_vector(closest_time, delta_v)?
    
    exec_next_node(vessel)
}