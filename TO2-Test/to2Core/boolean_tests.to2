use * from core::testing

test sync fn test_boolean_ops() -> Unit = {
    assert_true(true && true)
    assert_false(false && true)
    assert_false(true && false)
    assert_false(false && false)

    assert_false(!(true && true))
    assert_true(!(false && true))
    assert_true(!(true && false))
    assert_true(!(false && false))

    assert_true(true || true)
    assert_true(false || true)
    assert_true(true || false)
    assert_false(false || false)

    assert_false(!(true || true))
    assert_false(!(false || true))
    assert_false(!(true || false))
    assert_true(!(false || false))
}

sync fn fail_if_called() -> bool = {
    fail_test("This should not have been called")
    true
}

test sync fn test_boolean_skip() -> Unit = {
    assert_false(false && fail_if_called())
    assert_true(true || fail_if_called())
}

test sync fn test_boolean_convert() -> Unit = {
    assert_string("true", true.to_string())
    assert_string("false", false.to_string())

    assert_int(1, true.to_int)
    assert_float(1, true.to_float, 1e-10)
}
